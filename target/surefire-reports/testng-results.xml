<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="13" passed="11" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-12T22:00:07 IST" name="Surefire suite" finished-at="2024-08-12T22:00:54 IST" duration-ms="46711">
    <groups>
      <group name="Sanity">
        <method signature="TestNG_groups.Tast_005()[pri:0, instance:TestNG_Project.TestNG_groups@2ddc8ecb]" name="Tast_005" class="TestNG_Project.TestNG_groups"/>
        <method signature="TestNG_groups.Test_001()[pri:0, instance:TestNG_Project.TestNG_groups@2ddc8ecb]" name="Test_001" class="TestNG_Project.TestNG_groups"/>
      </group> <!-- Sanity -->
      <group name="Regression">
        <method signature="TestNG_groups.Tast_002()[pri:0, instance:TestNG_Project.TestNG_groups@2ddc8ecb]" name="Tast_002" class="TestNG_Project.TestNG_groups"/>
        <method signature="TestNG_groups.Tast_004()[pri:0, instance:TestNG_Project.TestNG_groups@2ddc8ecb]" name="Tast_004" class="TestNG_Project.TestNG_groups"/>
      </group> <!-- Regression -->
      <group name="Critical Regression">
        <method signature="TestNG_groups.Tast_003()[pri:0, instance:TestNG_Project.TestNG_groups@2ddc8ecb]" name="Tast_003" class="TestNG_Project.TestNG_groups"/>
      </group> <!-- Critical Regression -->
    </groups>
    <test started-at="2024-08-12T22:00:07 IST" name="Surefire test" finished-at="2024-08-12T22:00:54 IST" duration-ms="46711">
      <class name="Test_Pom.Test_2">
        <test-method is-config="true" signature="BOpen()[pri:0, instance:Test_Pom.Test_2@1534f01b]" started-at="2024-08-12T22:00:17 IST" name="BOpen" finished-at="2024-08-12T22:00:26 IST" duration-ms="9441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BOpen -->
        <test-method signature="test_002()[pri:0, instance:Test_Pom.Test_2@1534f01b]" started-at="2024-08-12T22:00:26 IST" name="test_002" finished-at="2024-08-12T22:00:26 IST" duration-ms="98" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_002 -->
        <test-method is-config="true" signature="BDown()[pri:0, instance:Test_Pom.Test_2@1534f01b]" started-at="2024-08-12T22:00:26 IST" name="BDown" finished-at="2024-08-12T22:00:27 IST" duration-ms="240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BDown -->
      </class> <!-- Test_Pom.Test_2 -->
      <class name="Test_Pom.Test_1">
        <test-method is-config="true" signature="BOpen()[pri:0, instance:Test_Pom.Test_1@63a65a25]" started-at="2024-08-12T22:00:07 IST" name="BOpen" finished-at="2024-08-12T22:00:16 IST" duration-ms="8816" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BOpen -->
        <test-method signature="test_001()[pri:0, instance:Test_Pom.Test_1@63a65a25]" started-at="2024-08-12T22:00:16 IST" name="test_001" finished-at="2024-08-12T22:00:17 IST" duration-ms="271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_001 -->
        <test-method is-config="true" signature="BDown()[pri:0, instance:Test_Pom.Test_1@63a65a25]" started-at="2024-08-12T22:00:17 IST" name="BDown" finished-at="2024-08-12T22:00:17 IST" duration-ms="212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BDown -->
      </class> <!-- Test_Pom.Test_1 -->
      <class name="TestNG_Project.TestNG_groups">
        <test-method signature="Tast_002()[pri:0, instance:TestNG_Project.TestNG_groups@2ddc8ecb]" started-at="2024-08-12T22:00:07 IST" name="Tast_002" finished-at="2024-08-12T22:00:07 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Tast_002 -->
        <test-method signature="Tast_003()[pri:0, instance:TestNG_Project.TestNG_groups@2ddc8ecb]" started-at="2024-08-12T22:00:07 IST" name="Tast_003" finished-at="2024-08-12T22:00:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Tast_003 -->
        <test-method signature="Tast_004()[pri:0, instance:TestNG_Project.TestNG_groups@2ddc8ecb]" started-at="2024-08-12T22:00:07 IST" name="Tast_004" finished-at="2024-08-12T22:00:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Tast_004 -->
        <test-method signature="Tast_005()[pri:0, instance:TestNG_Project.TestNG_groups@2ddc8ecb]" started-at="2024-08-12T22:00:07 IST" name="Tast_005" finished-at="2024-08-12T22:00:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Tast_005 -->
        <test-method signature="Test_001()[pri:0, instance:TestNG_Project.TestNG_groups@2ddc8ecb]" started-at="2024-08-12T22:00:07 IST" name="Test_001" finished-at="2024-08-12T22:00:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test_001 -->
      </class> <!-- TestNG_Project.TestNG_groups -->
      <class name="Waits.TestCase">
        <test-method is-config="true" signature="setup()[pri:0, instance:Waits.TestCase@78e117e3]" started-at="2024-08-12T22:00:27 IST" name="setup" finished-at="2024-08-12T22:00:34 IST" duration-ms="7139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="test_001()[pri:0, instance:Waits.TestCase@78e117e3]" started-at="2024-08-12T22:00:34 IST" name="test_001" finished-at="2024-08-12T22:00:54 IST" duration-ms="20167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_001 -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Waits.TestCase@78e117e3]" started-at="2024-08-12T22:00:54 IST" name="teardown" finished-at="2024-08-12T22:00:54 IST" duration-ms="214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Waits.TestCase -->
      <class name="TestNG_Project.TestNG_Keywords">
        <test-method signature="test_001()[pri:0, instance:TestNG_Project.TestNG_Keywords@45b9a632]" started-at="2024-08-12T22:00:07 IST" name="test_001" finished-at="2024-08-12T22:00:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_001 -->
        <test-method signature="test_001()[pri:0, instance:TestNG_Project.TestNG_Keywords@45b9a632]" started-at="2024-08-12T22:00:07 IST" name="test_001" finished-at="2024-08-12T22:00:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_001 -->
        <test-method signature="test_002()[pri:1, instance:TestNG_Project.TestNG_Keywords@45b9a632]" started-at="2024-08-12T22:00:07 IST" name="test_002" finished-at="2024-08-12T22:00:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_002 -->
        <test-method signature="test_003()[pri:3, instance:TestNG_Project.TestNG_Keywords@45b9a632]" started-at="2024-08-12T22:00:07 IST" name="test_003" finished-at="2024-08-12T22:00:07 IST" duration-ms="13" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at TestNG_Project.TestNG_Keywords.test_003(TestNG_Keywords.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_003 -->
        <test-method signature="test_005()[pri:4, instance:TestNG_Project.TestNG_Keywords@45b9a632]" started-at="2024-08-12T22:00:07 IST" name="test_005" finished-at="2024-08-12T22:00:07 IST" depends-on-methods="TestNG_Project.TestNG_Keywords.test_003" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestNG_Project.TestNG_Keywords.test_005() on instance TestNG_Project.TestNG_Keywords@45b9a632 depends on not successfully finished methods 
[TestNG_Project.TestNG_Keywords.test_003() on instance TestNG_Project.TestNG_Keywords@45b9a632]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestNG_Project.TestNG_Keywords.test_005() on instance TestNG_Project.TestNG_Keywords@45b9a632 depends on not successfully finished methods 
[TestNG_Project.TestNG_Keywords.test_003() on instance TestNG_Project.TestNG_Keywords@45b9a632]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_005 -->
      </class> <!-- TestNG_Project.TestNG_Keywords -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
